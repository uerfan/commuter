#!/usr/bin/python

import os
import argparse
import json

import dblib

parser = argparse.ArgumentParser()
parser.add_argument('-o', '--out', default='data', help='Output directory')
parser.add_argument('--details', action='store_true',
                    help='Separate sharing details')
parser.add_argument('mscan', type=file, help='mscan file')
parser.add_argument('runid', help='Run identifier (and base file name)')
args = parser.parse_args()

FORMAT = {'separators': (',',':')}

mscan = json.load(args.mscan)
testcases = dblib.reformat_tests(mscan['testcases'], args.runid)

# Compress
stacks = dblib.dedup_stacks(testcases)
data = dblib.split_template(testcases, ('calls', 'pathid', 'testno'), args.out)

if args.details:
    # Split sharing data
    main, details = dblib.split_details(data['!data'])
    data['!data'] = dblib.tablify(details, ('runid', 'shared'))
    json.dump({'testcases': data, 'stacks': stacks},
              file(os.path.join(args.out, '%s-details.json' % args.runid), 'w'),
              **FORMAT)
    data['!data'] = dblib.tablify(main, ('runid', 'nshared'))
    json.dump({'testcases': data},
              file(os.path.join(args.out, '%s.json' % args.runid), 'w'),
              **FORMAT)
else:
    data['!data'] = dblib.tablify(data['!data'], ('runid', 'shared'))
    json.dump({'testcases': data, 'stacks': stacks},
              file(os.path.join(args.out, '%s.json' % args.runid), 'w'),
              **FORMAT)
